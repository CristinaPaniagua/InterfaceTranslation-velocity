// Auto generated
package eu.generator.resources;

import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import com.github.underscore.lodash.U;
import eu.generator.consumer.ResponseDTO_C0;
import eu.generator.provider.ResponseDTO_P0;
import java.io.File;
import java.io.IOException;
import java.lang.Exception;
import java.lang.String;
import java.net.URI;
import java.net.URISyntaxException;
import org.eclipse.californium.core.CoapClient;
import org.eclipse.californium.core.CoapResource;
import org.eclipse.californium.core.CoapResponse;
import org.eclipse.californium.core.Utils;
import org.eclipse.californium.core.coap.CoAP;
import org.eclipse.californium.core.network.config.NetworkConfig;
import org.eclipse.californium.core.network.config.NetworkConfigDefaultHandler;
import org.eclipse.californium.core.server.resources.CoapExchange;
import org.eclipse.californium.elements.exception.ConnectorException;

public class RESTResources extends CoapResource {
  public RESTResources() {
     super("publish");
         getAttributes().setTitle("Publish Resource");
  }

#if($method=="GET")
  public void handleGET(CoapExchange exchange) {
    System.out.println(exchange.getRequestText());
    String receivedPayload=exchange.getRequestText();
     String response_out=" ";
    ResponseDTO_P0 response=new ResponseDTO_P0();
    JsonFactory jsonFactory_objMapper_Response = new JsonFactory();
    ObjectMapper objMapper_Response=new ObjectMapper(jsonFactory_objMapper_Response);
    try {
      String payload=null;
      response=consumeService("http://127.0.0.1:8889/demo/indoortemperature",payload);
      ResponseDTO_C0 response_C=new ResponseDTO_C0();
       response_C= responseAdaptor(response);
      if(response==null) {
        exchange.respond( "ERROR: EMPTY RESPONSE");
      }
      else {
        response_out= objMapper_Response.writeValueAsString(response_C);
         exchange.respond(CoAP.ResponseCode.CONTENT,response_out,41);
      }
    }
    catch (Exception e) {
       e.printStackTrace();
    }
  }
  #else
  
  #end

}